{"version":3,"sources":["AvatarContext.js","Contact.js","Home.js","NavBar.js","redux/slices/contactSilce.js","AddContact.js","updateContact.js","App.js","redux/store.js","index.js"],"names":["AvatarContext","createContext","Contact","_ref","person","CC","prevcontact","setCurrentContact","useContext","react_default","a","createElement","layout","onClick","e","current","console","log","className","id","user","style","cursor","src","avatar","backgroundColor","concat","_color","alt","name","ville","tel","Home","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","_useState3","_useState4","order","setOrder","contacts","useSelector","state","trim","filter","contact","toLowerCase","includes","type","onChange","target","value","placeholder","toConsumableArray","sort","b","map","src_Contact","key","NavBar","react_router_dom_dist","to","width","textAlign","contactSlice","createSlice","initialState","reducers","addContact","action","_action$payload","payload","pic","push","updateContact","_action$payload2","index","findIndex","element","deleteContact","_contactSlice$actions","actions","filterContact","AddContact","photo","setCC","dispatch","useDispatch","navigate","useNavigate","phoneRef","useRef","cityRef","nameRef","useEffect","ref","crypto","randomUUID","UpdateContact","info","infoprev","setPhone","setCity","_useState5","_useState6","setName","undefined","App","setContacts","CContact","prevUser","setUuid","display","flexDirection","justifyContent","alignItems","height","src_AvatarContext","Provider","dist","path","src_updateContact","src_AddContact","prs","src_NavBar","configureStore","reducer","ContactReducer","ReactDOM","createRoot","document","getElementById","render","basename","es","store","src_App"],"mappings":"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","file":"static/js/main.2b9cfac8.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst AvatarContext = createContext();\r\n\r\nexport default AvatarContext;","import React, { useContext } from 'react'\r\nimport AvatarContext from './AvatarContext'\r\nimport './Contact.css';\r\n\r\nfunction Contact({ person, CC, prevcontact }) {\r\n    const {setCurrentContact } = useContext(AvatarContext);\r\n    const change = (e) => {\r\n        prevcontact.current = CC \r\n        setCurrentContact(person)\r\n        console.log(CC)\r\n    }\r\n    return (\r\n        <div layout onClick={(e)=>(change(e))} className=\"mb-3 row p-2  text-light user-card bg-dark\" id={person.user.id} style={{cursor:\"pointer\"}}>\r\n            <div className=\"align-self-center col-1\">\r\n                <img src={person.user.avatar} style={{backgroundColor:`${person.user._color}`}} className='rounded-circle user-avatar' alt=\"\"/>\r\n            </div>\r\n            <div className=\"ps-5 col-10\">\r\n                <h3>{person.name} </h3>\r\n                <ul className='ps-4'>\r\n                    <li>City: {person.ville}</li>\r\n                    <li>Phone: {person.tel}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact","import React, {useState } from 'react'\r\nimport {useSelector } from 'react-redux';\r\nimport './App.css';\r\nimport Contact from './Contact';\r\n\r\nexport default function Home({CC, prevcontact}) {\r\n  const [search, setSearch] = useState('');\r\n  const [order, setOrder] = useState(true);\r\n  const contacts = useSelector(state=>{\r\n    if (search.trim()=='') {\r\n      return state.contacts;\r\n    }\r\n    return state.contacts.filter(contact => \r\n      contact.ville.toLowerCase().includes(search.toLowerCase()) || \r\n      contact.name.toLowerCase().includes(search.toLowerCase()) || \r\n      contact.tel.toLowerCase().includes(search.toLowerCase()) \r\n    );\r\n\r\n  });\r\n\r\n  return (\r\n    <div className=\"py-2 px-4\">\r\n      <div className='row justify-content-between mb-3'>\r\n        <div className=\"col-5\">\r\n          <input type=\"text\"  onChange={(e)=>setSearch(e.target.value)} placeholder='search' className='form-control shadow-none' />\r\n        </div>\r\n        <div className=\"col-4 order pe-4 text-dark\">\r\n          <span onClick={(e)=>setOrder(!order)} style={{cursor:\"pointer\"}}> <b >order :</b> {order ? 'Desc' : 'Asc'}</span>\r\n        </div>\r\n      </div>\r\n      <div layout className='users-wrapper'>\r\n        {\r\n          order ? [...contacts].sort((a, b) => (a.name < b.name ? 1 : -1)).map(person => <Contact prevcontact={prevcontact} CC={CC} key={person.user.id} person={person} />)\r\n            : [...contacts].sort((a, b) => (a.name > b.name ? 1 : -1)).map(person => <Contact prevcontact={prevcontact} CC={CC} key={person.user.id} person={person} />)\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Navbar.css'\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <span>\r\n            <NavLink to='/new-contact' className=\"nav-link mx-4 py-2\" style={{backgroundColor:'black', width:130, textAlign:'center'}}>\r\n                <p  className='mb-0'>New Contact</p>\r\n            </NavLink>\r\n        </span>\r\n    )\r\n}\r\nexport default NavBar;","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\n\r\nconst contactSlice = createSlice({\r\n    name: 'contacts',\r\n    initialState: [{ \r\n        user: { id: 0, avatar: `https://api.multiavatar.com/0.png` },\r\n        name: 'Aymane Chabat',\r\n        tel: '0606060606',\r\n        ville: \"Tanger\"\r\n    }],\r\n    reducers: {\r\n        addContact: (state, action) => {\r\n            const { name, tel, ville, id, pic } = action.payload\r\n            state.push({\r\n                user: {\r\n                    id: id,\r\n                    avatar: pic\r\n                },\r\n                name, tel, ville\r\n            })\r\n        },\r\n        updateContact: (state, action) => {\r\n            const {id, name, tel, ville} = action.payload\r\n            const index = state.findIndex(element => \r\n                element.user.id == id\r\n            )\r\n            state[index] = {\r\n                user: {\r\n                    id: id,\r\n                    avatar: state[index].user.avatar\r\n                },\r\n                name, \r\n                tel, \r\n                ville\r\n            }\r\n        },\r\n        deleteContact: (state, action) => {\r\n            return state.filter(contact => contact.user.id != action.payload.id);\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    addContact,\r\n    deleteContact,\r\n    filterContact ,\r\n    updateContact\r\n} = contactSlice.actions;\r\nexport default contactSlice.reducer;","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContact } from './redux/slices/contactSilce';\r\nimport './App.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction AddContact({id, photo, setCC}) {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate()\r\n  const phoneRef = useRef();\r\n  const cityRef = useRef();\r\n  const nameRef = useRef();\r\n  useEffect(()=>{setCC('')},[])\r\n\r\n  const handleAddContacts =  (e) => {\r\n    let name = nameRef.current.value.trim();\r\n    let tel = phoneRef.current.value.trim();\r\n    let ville = cityRef.current.value.trim();\r\n    if (name =='' || tel=='' || ville =='') {\r\n      return;\r\n    }\r\n    var pic = `https://api.multiavatar.com/${id}.png`\r\n    dispatch(addContact({\r\n      name,ville,tel, id, pic\r\n    }));\r\n    phoneRef.current.value = '';\r\n    nameRef.current.value = '';\r\n    cityRef.current.value = '';\r\n    navigate(-1)\r\n    setCC({\r\n    user: { id: id, avatar: pic },\r\n    name: name,\r\n    tel: tel,\r\n    ville: ville\r\n    })\r\n    photo(crypto.randomUUID())\r\n  }\r\n  return (\r\n    <div className=\"col-9 mx-auto mt-5 py-2 px-4\">\r\n      <div className=\"mb-3 row text-dark\">\r\n        <div className=\"col\">\r\n          <label className=\"form-label\">Name</label>\r\n          <input type=\"text\" ref={nameRef} className=\"form-control shadow-none\" placeholder=\"Name\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"mb-3 row text-dark\">\r\n        <div className=\"col\">\r\n          <label className=\"form-label\">Phone Number</label>\r\n          <input type=\"text\" ref={phoneRef} className=\"form-control shadow-none\" placeholder=\"Phone Number\" />\r\n        </div>\r\n        <div className=\"col\">\r\n          <label className=\"form-label\">City</label>\r\n          <input type=\"text\" ref={cityRef} className=\"form-control shadow-none\" placeholder=\"City\"/>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <button onClick={handleAddContacts} className='col-5 mx-auto btn mt-4 ' style={{ backgroundColor: '#F6EAD3' }}>\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default AddContact;","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateContact, deleteContact } from './redux/slices/contactSilce';\r\nimport './App.css';\r\n\r\nfunction UpdateContact({info, infoprev, setCC}) {\r\n  const dispatch = useDispatch();\r\n  const [tel,setPhone] = useState('');\r\n  const [ville,setCity] = useState('');\r\n  const [name,setName] = useState('');\r\n  const removeFromContact = () => {\r\n    dispatch(deleteContact({\r\n        id:info.user.id\r\n    }));\r\n    setCC(infoprev)\r\n}\r\n\r\n  useEffect(()=>{\r\n    setCity(info != undefined ? info.ville : '')\r\n    setName(info != undefined ? info.name : '')\r\n    setPhone(info != undefined ? info.tel : '')\r\n  },[info])\r\n\r\n\r\n  const handleUpdateContacts =  (e) => {\r\n    let id = info.user.id\r\n    if (name =='' || tel=='' || ville =='') {\r\n      return;\r\n    }\r\n    dispatch(updateContact({\r\n      id, name, ville, tel\r\n    }));\r\n  }\r\n  return (\r\n    <div className=\"col-9 mx-auto mt-5 py-2 px-4\">\r\n      <div className=\"mb-3 row text-dark\">\r\n        <div className=\"col\">\r\n          <label className=\"form-label\">Name</label>\r\n          <input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} className=\"form-control shadow-none\" placeholder=\"Name\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"mb-3 row text-dark\">\r\n        <div className=\"col\">\r\n          <label className=\"form-label\">Phone Number</label>\r\n          <input type=\"text\" onChange={(e) => setPhone(e.target.value)} value={tel} className=\"form-control shadow-none\" placeholder=\"Phone Number\" />\r\n        </div>\r\n        <div className=\"col\">\r\n          <label className=\"form-label\">City</label>\r\n          <input type=\"text\" onChange={(e) => setCity(e.target.value)} value={ville} className=\"form-control shadow-none\" placeholder=\"City\"/>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <button onClick={handleUpdateContacts} className='col-5 mx-auto btn mt-4 ' style={{ backgroundColor: '#F6EAD3' }}>\r\n          Update\r\n        </button>\r\n        <button onClick={removeFromContact} className='col-5 mx-auto btn mt-4 ' style={{ backgroundColor: 'red' }}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default UpdateContact;","import { useEffect, useState, useRef } from 'react';\r\nimport React from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport NavBar from './NavBar';\r\nimport AddContact from './AddContact';\r\nimport CContext from './AvatarContext';\r\nimport UpdateContact from './updateContact'\r\n\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState();\r\n  const [CContact, setCurrentContact] = useState({ \r\n    user: { id: 0, avatar: `https://api.multiavatar.com/0.png` },\r\n    name: 'Aymane Chabat',\r\n    tel: '0606060606',\r\n    ville: \"Tanger\"\r\n});\r\nconst prevUser = useRef()\r\nuseEffect(()=>{\r\nprevUser.current = CContact\r\n},[CContact])\r\n  const [id, setUuid] = useState(crypto.randomUUID())\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container py-5\">\r\n        <div className=\"row app-wrapper \">\r\n          <div id='upd' className={`col-5 py-0 row`} style={{backgroundColor:`black`,display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\r\n            <img src={`${CContact == '' ? `https://api.multiavatar.com/${id}.png` : CContact.user.avatar}`} style={{height:'150px',width:'170px'}} alt=\"\" />\r\n            <CContext.Provider>\r\n              <Routes>\r\n                <Route path=\"/\">\r\n                  <Route index element={<UpdateContact info={CContact} infoprev={prevUser.current} setCC={setCurrentContact}/>} />\r\n                  <Route path='new-contact' element={<AddContact prs={'add'} id={id} photo={setUuid} setCC={setCurrentContact}/>} />\r\n                </Route>\r\n              </Routes>\r\n            </CContext.Provider>\r\n          </div>\r\n          <div className=\"col-7 contact-list\">\r\n            <NavBar />\r\n            <CContext.Provider value={{ contacts, setContacts, CContact, setCurrentContact }}>\r\n              <Home prevcontact={prevUser} CC={CContact}/>\r\n            </CContext.Provider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport ContactReducer from \"./slices/contactSilce\";\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        contacts:ContactReducer,\r\n    },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <BrowserRouter basename='/Contact'>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>\r\n);\r\n\r\n"],"sourceRoot":""}
{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar randomuuid = crypto.randomUUID();\nvar contactSlice = createSlice({\n  name: 'contacts',\n  initialState: [{\n    randomuuid: {\n      user: {\n        id: crypto.randomUUID(),\n        avatar: \"https://robohash.org/Gl.png?set=set3\"\n      },\n      name: 'Aymane Chabat',\n      tel: '0606060606',\n      ville: \"Tanger\"\n    }\n  }],\n  reducers: {\n    addContact: function addContact(state, action) {\n      var _action$payload = action.payload,\n        name = _action$payload.name,\n        tel = _action$payload.tel,\n        ville = _action$payload.ville;\n      state.push({\n        user: {\n          id: crypto.randomUUID(),\n          avatar: \"https://robohash.org/\".concat(name, \".png?set=set3\")\n        },\n        name: name,\n        tel: tel,\n        ville: ville\n      });\n    },\n    updateContact: function updateContact(state, action) {\n      var _action$payload2 = action.payload,\n        id = _action$payload2.id,\n        name = _action$payload2.name,\n        tel = _action$payload2.tel,\n        ville = _action$payload2.ville;\n      state[id] = {\n        user: {\n          id: id,\n          avatar: \"https://robohash.org/\".concat(name, \".png?set=set3\")\n        },\n        name: name,\n        tel: tel,\n        ville: ville\n      };\n    },\n    deleteContact: function deleteContact(state, action) {\n      return state.filter(function (contact) {\n        return contact.user.id != action.payload.id;\n      });\n    }\n  }\n});\nvar _contactSlice$actions = contactSlice.actions,\n  addContact = _contactSlice$actions.addContact,\n  deleteContact = _contactSlice$actions.deleteContact,\n  filterContact = _contactSlice$actions.filterContact,\n  updateContact = _contactSlice$actions.updateContact;\nexport { addContact, deleteContact, filterContact, updateContact };\nexport default contactSlice.reducer;","map":{"version":3,"names":["createSlice","randomuuid","crypto","randomUUID","contactSlice","name","initialState","user","id","avatar","tel","ville","reducers","addContact","state","action","payload","push","updateContact","deleteContact","filter","contact","actions","filterContact","reducer"],"sources":["C:/Users/aycha/contact-list/src/redux/slices/contactSilce.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst randomuuid = crypto.randomUUID()\r\n\r\n\r\nconst contactSlice = createSlice({\r\n    name: 'contacts',\r\n    initialState: [{ randomuuid : {\r\n        user: { id: crypto.randomUUID(), avatar: `https://robohash.org/Gl.png?set=set3` },\r\n        name: 'Aymane Chabat',\r\n        tel: '0606060606',\r\n        ville: \"Tanger\"\r\n    }\r\n    }],\r\n    reducers: {\r\n        addContact: (state, action) => {\r\n            const { name, tel, ville } = action.payload\r\n            state.push({\r\n                user: {\r\n                    id: crypto.randomUUID(),\r\n                    avatar: `https://robohash.org/${name}.png?set=set3`\r\n                },\r\n                name, tel, ville\r\n            })\r\n        },\r\n        updateContact: (state, action) => {\r\n            const {id, name, tel, ville} = action.payload\r\n            state[id] = {\r\n                user: {\r\n                    id: id,\r\n                    avatar: `https://robohash.org/${name}.png?set=set3`\r\n                },\r\n                name, tel, ville\r\n            }\r\n        },\r\n        deleteContact: (state, action) => {\r\n            return state.filter(contact => contact.user.id != action.payload.id);\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    addContact,\r\n    deleteContact,\r\n    filterContact ,\r\n    updateContact\r\n} = contactSlice.actions;\r\nexport default contactSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,IAAMC,UAAU,GAAGC,MAAM,CAACC,UAAU,EAAE;AAGtC,IAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,CAAC;IAAEL,UAAU,EAAG;MAC1BM,IAAI,EAAE;QAAEC,EAAE,EAAEN,MAAM,CAACC,UAAU,EAAE;QAAEM,MAAM;MAAyC,CAAC;MACjFJ,IAAI,EAAE,eAAe;MACrBK,GAAG,EAAE,YAAY;MACjBC,KAAK,EAAE;IACX;EACA,CAAC,CAAC;EACFC,QAAQ,EAAE;IACNC,UAAU,EAAE,oBAACC,KAAK,EAAEC,MAAM,EAAK;MAAA,sBACEA,MAAM,CAACC,OAAO;QAAnCX,IAAI,mBAAJA,IAAI;QAAEK,GAAG,mBAAHA,GAAG;QAAEC,KAAK,mBAALA,KAAK;MACxBG,KAAK,CAACG,IAAI,CAAC;QACPV,IAAI,EAAE;UACFC,EAAE,EAAEN,MAAM,CAACC,UAAU,EAAE;UACvBM,MAAM,iCAA0BJ,IAAI;QACxC,CAAC;QACDA,IAAI,EAAJA,IAAI;QAAEK,GAAG,EAAHA,GAAG;QAAEC,KAAK,EAALA;MACf,CAAC,CAAC;IACN,CAAC;IACDO,aAAa,EAAE,uBAACJ,KAAK,EAAEC,MAAM,EAAK;MAAA,uBACCA,MAAM,CAACC,OAAO;QAAtCR,EAAE,oBAAFA,EAAE;QAAEH,IAAI,oBAAJA,IAAI;QAAEK,GAAG,oBAAHA,GAAG;QAAEC,KAAK,oBAALA,KAAK;MAC3BG,KAAK,CAACN,EAAE,CAAC,GAAG;QACRD,IAAI,EAAE;UACFC,EAAE,EAAEA,EAAE;UACNC,MAAM,iCAA0BJ,IAAI;QACxC,CAAC;QACDA,IAAI,EAAJA,IAAI;QAAEK,GAAG,EAAHA,GAAG;QAAEC,KAAK,EAALA;MACf,CAAC;IACL,CAAC;IACDQ,aAAa,EAAE,uBAACL,KAAK,EAAEC,MAAM,EAAK;MAC9B,OAAOD,KAAK,CAACM,MAAM,CAAC,UAAAC,OAAO;QAAA,OAAIA,OAAO,CAACd,IAAI,CAACC,EAAE,IAAIO,MAAM,CAACC,OAAO,CAACR,EAAE;MAAA,EAAC;IACxE;EACJ;AACJ,CAAC,CAAC;AAAC,4BAOCJ,YAAY,CAACkB,OAAO;EAJpBT,UAAU,yBAAVA,UAAU;EACVM,aAAa,yBAAbA,aAAa;EACbI,aAAa,yBAAbA,aAAa;EACbL,aAAa,yBAAbA,aAAa;AAAA;AAEjB,eAAed,YAAY,CAACoB,OAAO"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar contactSlice = createSlice({\n  name: 'contacts',\n  initialState: [{\n    user: {\n      id: crypto.randomUUID(),\n      avatar: \"https://api.multiavatar.com/0.png\"\n    },\n    name: 'Aymane Chabat',\n    tel: '0606060606',\n    ville: \"Tanger\"\n  }],\n  reducers: {\n    addContact: function addContact(state, action) {\n      var _action$payload = action.payload,\n        name = _action$payload.name,\n        tel = _action$payload.tel,\n        ville = _action$payload.ville,\n        id = _action$payload.id,\n        pic = _action$payload.pic;\n      state.push({\n        user: {\n          id: id,\n          avatar: photo\n        },\n        name: name,\n        tel: tel,\n        ville: ville\n      });\n    },\n    updateContact: function updateContact(state, action) {\n      var _action$payload2 = action.payload,\n        id = _action$payload2.id,\n        name = _action$payload2.name,\n        tel = _action$payload2.tel,\n        ville = _action$payload2.ville;\n      var index = state.findIndex(function (element) {\n        return element.user.id == id;\n      });\n      state[index] = {\n        user: {\n          id: id,\n          avatar: state[index].user.avatar\n        },\n        name: name,\n        tel: tel,\n        ville: ville\n      };\n    },\n    deleteContact: function deleteContact(state, action) {\n      return state.filter(function (contact) {\n        return contact.user.id != action.payload.id;\n      });\n    }\n  }\n});\nvar _contactSlice$actions = contactSlice.actions,\n  addContact = _contactSlice$actions.addContact,\n  deleteContact = _contactSlice$actions.deleteContact,\n  filterContact = _contactSlice$actions.filterContact,\n  updateContact = _contactSlice$actions.updateContact;\nexport { addContact, deleteContact, filterContact, updateContact };\nexport default contactSlice.reducer;","map":{"version":3,"names":["createSlice","contactSlice","name","initialState","user","id","crypto","randomUUID","avatar","tel","ville","reducers","addContact","state","action","payload","pic","push","photo","updateContact","index","findIndex","element","deleteContact","filter","contact","actions","filterContact","reducer"],"sources":["C:/Users/aycha/contact-list/src/redux/slices/contactSilce.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\n\r\nconst contactSlice = createSlice({\r\n    name: 'contacts',\r\n    initialState: [{ \r\n        user: { id: crypto.randomUUID(), avatar: `https://api.multiavatar.com/0.png` },\r\n        name: 'Aymane Chabat',\r\n        tel: '0606060606',\r\n        ville: \"Tanger\"\r\n    }],\r\n    reducers: {\r\n        addContact: (state, action) => {\r\n            const { name, tel, ville, id, pic } = action.payload\r\n            state.push({\r\n                user: {\r\n                    id: id,\r\n                    avatar: photo\r\n                },\r\n                name, tel, ville\r\n            })\r\n        },\r\n        updateContact: (state, action) => {\r\n            const {id, name, tel, ville} = action.payload\r\n            const index = state.findIndex(element => \r\n                element.user.id == id\r\n            )\r\n            state[index] = {\r\n                user: {\r\n                    id: id,\r\n                    avatar: state[index].user.avatar\r\n                },\r\n                name, \r\n                tel, \r\n                ville\r\n            }\r\n        },\r\n        deleteContact: (state, action) => {\r\n            return state.filter(contact => contact.user.id != action.payload.id);\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    addContact,\r\n    deleteContact,\r\n    filterContact ,\r\n    updateContact\r\n} = contactSlice.actions;\r\nexport default contactSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAI9C,IAAMC,YAAY,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,CAAC;IACXC,IAAI,EAAE;MAAEC,EAAE,EAAEC,MAAM,CAACC,UAAU,EAAE;MAAEC,MAAM;IAAsC,CAAC;IAC9EN,IAAI,EAAE,eAAe;IACrBO,GAAG,EAAE,YAAY;IACjBC,KAAK,EAAE;EACX,CAAC,CAAC;EACFC,QAAQ,EAAE;IACNC,UAAU,EAAE,oBAACC,KAAK,EAAEC,MAAM,EAAK;MAAA,sBACWA,MAAM,CAACC,OAAO;QAA5Cb,IAAI,mBAAJA,IAAI;QAAEO,GAAG,mBAAHA,GAAG;QAAEC,KAAK,mBAALA,KAAK;QAAEL,EAAE,mBAAFA,EAAE;QAAEW,GAAG,mBAAHA,GAAG;MACjCH,KAAK,CAACI,IAAI,CAAC;QACPb,IAAI,EAAE;UACFC,EAAE,EAAEA,EAAE;UACNG,MAAM,EAAEU;QACZ,CAAC;QACDhB,IAAI,EAAJA,IAAI;QAAEO,GAAG,EAAHA,GAAG;QAAEC,KAAK,EAALA;MACf,CAAC,CAAC;IACN,CAAC;IACDS,aAAa,EAAE,uBAACN,KAAK,EAAEC,MAAM,EAAK;MAAA,uBACCA,MAAM,CAACC,OAAO;QAAtCV,EAAE,oBAAFA,EAAE;QAAEH,IAAI,oBAAJA,IAAI;QAAEO,GAAG,oBAAHA,GAAG;QAAEC,KAAK,oBAALA,KAAK;MAC3B,IAAMU,KAAK,GAAGP,KAAK,CAACQ,SAAS,CAAC,UAAAC,OAAO;QAAA,OACjCA,OAAO,CAAClB,IAAI,CAACC,EAAE,IAAIA,EAAE;MAAA,EACxB;MACDQ,KAAK,CAACO,KAAK,CAAC,GAAG;QACXhB,IAAI,EAAE;UACFC,EAAE,EAAEA,EAAE;UACNG,MAAM,EAAEK,KAAK,CAACO,KAAK,CAAC,CAAChB,IAAI,CAACI;QAC9B,CAAC;QACDN,IAAI,EAAJA,IAAI;QACJO,GAAG,EAAHA,GAAG;QACHC,KAAK,EAALA;MACJ,CAAC;IACL,CAAC;IACDa,aAAa,EAAE,uBAACV,KAAK,EAAEC,MAAM,EAAK;MAC9B,OAAOD,KAAK,CAACW,MAAM,CAAC,UAAAC,OAAO;QAAA,OAAIA,OAAO,CAACrB,IAAI,CAACC,EAAE,IAAIS,MAAM,CAACC,OAAO,CAACV,EAAE;MAAA,EAAC;IACxE;EACJ;AACJ,CAAC,CAAC;AAAC,4BAOCJ,YAAY,CAACyB,OAAO;EAJpBd,UAAU,yBAAVA,UAAU;EACVW,aAAa,yBAAbA,aAAa;EACbI,aAAa,yBAAbA,aAAa;EACbR,aAAa,yBAAbA,aAAa;AAAA;AAEjB,eAAelB,YAAY,CAAC2B,OAAO"},"metadata":{},"sourceType":"module"}